~*~ Cross-Reference List ~*~

1 | /*
2 |      CIS26B
3 |      Complex Structures and Functions
4 |         - define and initialize an array of FRIEND structures
5 |         - use structures as reference parameters (pointers)
6 | */
7 | #include <stdio.h>
8 | #include <string.h>
9 | 
10 | typedef struct{
11 |     char *name;
12 |     char  phone[11];
13 |     int   age;
14 | } FRIEND;
15 | 
16 | // Function Declarations
17 | void exchange( FRIEND *one, FRIEND *two );
18 | void print_a_friend( const FRIEND *a_friend );
19 | 
20 | int main( void )
21 | {
22 |     int i;
23 | 
24 |     FRIEND a_friend = { "John", "4081112345", 25 };
25 |     FRIEND friend_2;
26 |     FRIEND friends[10] = 
27 |     {
28 |         { "John", "4081112345", 25 },
29 |         { "Mary", "4089992222", 21 },
30 |         { "Mira", "4086668888", 22 }
31 |     };
32 |     
33 |     friend_2.name = "Mary";
34 |     strcpy(friend_2.phone, "4089992222");
35 |     friend_2.age = 21;
36 | 
37 |     printf( "%s %s %d\n", a_friend.name, a_friend.phone, a_friend.age );
38 |     printf( "%s %s %d\n", friend_2.name, friend_2.phone, friend_2.age );
39 |     printf( "\n" );
40 | 
41 |     for( i = 0; i < 3; i++ )
42 |         print_a_friend( &friends[i] );
43 |     printf( "\n" );
44 | 
45 |     exchange( &friends[0], &friends[2] );
46 | 
47 |     for( i = 0; i < 3; i++ )
48 |         print_a_friend( &friends[i] );
49 |     printf( "\n" );
50 | 
51 | 	return 0;
52 | }
53 | 
54 | /*
55 |  This function swaps
56 |  two FRIEND structures
57 |  */
58 | void exchange( FRIEND *one, FRIEND *two )
59 | {
60 |     FRIEND _temp; // needed for swapping
61 | 
62 |     _temp = *one;
63 |     *one = *two;
64 |     *two = _temp;
65 | }
66 | 
67 | /*
68 |  This function receives a pointer to a FRIEND structure
69 |  and displays its fields on one line.
70 |  */
71 | void print_a_friend( const FRIEND *a_friend )
72 | {
73 |     printf( "%s %s %d\n", a_friend->name, a_friend->phone, a_friend->age );
74 | }
75 | 
76 | /*
77 |  ************ OUTPUT *****************
78 | 
79 |  John 4081112345 25
80 |  Mary 4089992222 21
81 |  
82 |  John 4081112345 25
83 |  Mary 4089992222 21
84 |  Mira 4086668888 22
85 |  
86 |  Mira 4086668888 22
87 |  Mary 4089992222 21
88 |  John 4081112345 25
89 | 
90 | */


Cross-reference list made at: Wed Mar 23 11:57:11 2022
	return: 51 

: 9 15 19 23 36 40 44 46 50 53 61 66 75 78 89 
"%s: 37 38 73 
"4081112345",: 24 28 
"4086668888",: 30 
"4089992222");: 34 
"4089992222",: 29 
"John",: 24 28 
"Mary",: 29 
"Mary";: 33 
"Mira",: 30 
"\n": 39 43 49 
#include: 7 8 
%d\n",: 37 38 73 
%s: 37 38 73 
&friends[0],: 45 
&friends[2]: 45 
&friends[i]: 42 48 
(pointers): 5 
): 20 41 47 58 71 
);: 17 18 37 38 39 42 43 45 48 49 73 
************: 77 
*****************: 77 
*/: 6 57 70 90 
*a_friend: 18 71 
*name;: 11 
*one: 63 
*one,: 17 58 
*one;: 62 
*two: 17 58 64 
*two;: 63 
-: 4 5 
/*: 1 54 67 76 
//: 16 60 
0;: 41 47 51 
21: 29 80 83 87 
21;: 35 
22: 30 84 86 
25: 24 28 79 82 88 
3;: 41 47 
4081112345: 79 82 88 
4086668888: 84 86 
4089992222: 80 83 87 
<: 41 47 
<stdio.h>: 7 
<string.h>: 8 
=: 24 26 33 35 41 47 62 63 64 
CIS26B: 2 
Complex: 3 
Declarations: 16 
FRIEND: 4 17 18 24 25 26 56 58 60 68 71 
FRIEND;: 14 
Function: 16 
Functions: 3 
John: 79 82 88 
Mary: 80 83 87 
Mira: 84 86 
OUTPUT: 77 
Structures: 3 
This: 55 68 
_temp: 62 
_temp;: 60 64 
a: 68 
a_friend: 24 
a_friend->age: 73 
a_friend->name,: 73 
a_friend->phone,: 73 
a_friend.age: 37 
a_friend.name,: 37 
a_friend.phone,: 37 
age;: 13 
an: 4 
and: 3 4 69 
array: 4 
as: 5 
char: 11 12 
const: 18 71 
define: 4 
displays: 69 
exchange(: 17 45 58 
fields: 69 
for: 60 
for(: 41 47 
friend_2.age: 35 38 
friend_2.name: 33 
friend_2.name,: 38 
friend_2.phone,: 38 
friend_2;: 25 
friends[10]: 26 
function: 55 68 
i: 41 47 
i++: 41 47 
i;: 22 
initialize: 4 
int: 13 20 22 
its: 69 
line.: 69 
main(: 20 
needed: 60 
of: 4 
on: 69 
one: 69 
parameters: 5 
phone[11];: 12 
pointer: 68 
print_a_friend(: 18 42 48 71 
printf(: 37 38 39 43 49 73 
receives: 68 
reference: 5 
strcpy(friend_2.phone,: 34 
structure: 68 
structures: 4 5 56 
struct{: 10 
swapping: 60 
swaps: 55 
to: 68 
two: 56 
typedef: 10 
use: 5 
void: 17 18 20 58 71 
{: 21 24 27 28 29 30 59 72 
}: 14 30 52 65 74 
},: 28 29 
};: 24 31 
